{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAQ6C,SAApCC,EAAYC,EAAUC,GAC7B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAGUC,YAArC,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAjBGQ,SAASC,cAAc,SAG/BC,iBAAiB,UAmBU,SAAVC,GAEYA,EAA/BC,iBAE4C,MAAxCZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAIK,cAAcC,SAGN,IAAvC,IAAIC,EAAI,EAAGC,EAAW,EAAGD,EAAIH,EAAOK,MAAOF,GAAK,EAAGC,GAAY,EAAG,CAEzB,MAAtCE,EAAWC,OAAOT,EAAMO,OAASN,EAAKM,MAAQF,EAEApB,EAAxCqB,EAAUE,GACnBE,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MAEjBwB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAqB3B,QAAiBC,MAAU,IAGnD2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAElBwB,EAAA5B,GAAS6B,OAAOG,QACd,sBAAoB7B,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst ourForm = document.querySelector('.form');\n\n// Додавання події `submit` до форми і прив'язка функції `onSubmit` як обробника події\nourForm.addEventListener('submit', turnOnOurSubmit);\n\n// Функція, яка створює проміс з випадковими значеннями\nfunction newPromises(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    // Встановлення таймеру, який викликається після затримки\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// Функція, яка виконується при подачі форми\nfunction turnOnOurSubmit(evt) {\n  // Запобігання перезавантаження сторінки\n  evt.preventDefault();\n  // Отримання значень полів форми за допомогою властивості `elements`\n  const { delay, step, amount } = evt.currentTarget.elements;\n\n  // Цикл, який генерує проміси в залежності від значення `amount`\n  for (let i = 0, position = 1; i < amount.value; i += 1, position += 1) {\n    // Обчислення загальної затримки для кожного промісу\n    const delayAll = Number(delay.value) + step.value * i;\n    // Виклик функції `createPromise` для створення промісу з позицією та затримкою\n    newPromises(position, delayAll)\n      .then(({ position, delay }) => {\n        // Якщо проміс виконується, виводиться повідомлення про успіх\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        // Якщо проміс не виконується - помилкa\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$newPromises","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","evt","preventDefault","delay1","step","amount","currentTarget","elements","i","position1","value","delayAll","Number","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.98f23802.js.map"}