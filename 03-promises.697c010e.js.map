{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAQ6C,SAApCC,EAAYC,EAAUC,GAC7B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAGUC,YAArC,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAjBSQ,SAASC,cAAc,SAG/BC,iBAAiB,UAmBU,SAAVC,GAEYA,EAA/BC,iBAKwC,IAHI,IAAhBC,EAAAF,EAAIG,cAAcC,SAA1CC,EAAwBH,EAAxBb,MAAOiB,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OAGZC,EAAI,EAAGC,EAAW,EAAGD,EAAID,EAAOG,MAAOF,GAAK,EAAGC,GAAY,EAAG,CAEzB,IAAtCE,EAAWC,OAAOP,EAAMK,OAASJ,EAAKI,MAAQF,EAEArB,EAAxCsB,EAAUE,GACnBE,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAEjB0B,EAAA9B,GAAS+B,OAAOC,QACd,uBAAwCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAGjD8B,OAAM,SAAAL,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAElB0B,EAAA9B,GAAS+B,OAAOI,QACd,sBAAqCF,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst ourForm = document.querySelector('.form');\n\n// Додавання події `submit` до форми і прив'язка функції `onSubmit` як обробника події\nourForm.addEventListener('submit', turnOnOurSubmit);\n\n// Функція, яка створює проміс з випадковими значеннями\nfunction newPromises(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    // Встановлення таймеру, який викликається після затримки\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// Функція, яка виконується при подачі форми\nfunction turnOnOurSubmit(evt) {\n  // Запобігання перезавантаження сторінки\n  evt.preventDefault();\n  // Отримання значень полів форми за допомогою властивості `elements`\n  const { delay, step, amount } = evt.currentTarget.elements;\n\n  // Цикл, який генерує проміси в залежності від значення `amount`\n  for (let i = 0, position = 1; i < amount.value; i += 1, position += 1) {\n    // Обчислення загальної затримки для кожного промісу\n    const delayAll = Number(delay.value) + step.value * i;\n    // Виклик функції `createPromise` для створення промісу з позицією та затримкою\n    newPromises(position, delayAll)\n      .then(({ position, delay }) => {\n        // Якщо проміс виконується, виводиться повідомлення про успіх\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        // Якщо проміс не виконується - помилкa\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$newPromises","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","evt","preventDefault","_elements","currentTarget","elements","delay1","step","amount","i","position1","value","delayAll","Number","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.697c010e.js.map"}